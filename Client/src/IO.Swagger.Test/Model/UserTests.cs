/* 
 * API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing User
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class UserTests
    {
        private User instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new User();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of User
        /// </summary>
        [Test]
        public void UserInstanceTest()
        {
            Assert.IsInstanceOf<User>(instance, "variable 'instance' is a User");
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
			var newName = "NewName";
			instance.Name = newName;
			Assert.AreEqual(newName, instance.Name);

		}
        /// <summary>
        /// Test the property 'Password'
        /// </summary>
        [Test]
        public void PasswordTest()
        {
			var newPassword = "newPass";
			instance.Password = newPassword;
			Assert.AreEqual(newPassword, instance.Password);
		}
        /// <summary>
        /// Test the property 'Roles'
        /// </summary>
        [Test]
        public void RolesTest()
        {
			var newRoles = new List<UserRole>();
			instance.Roles = newRoles;
			Assert.AreEqual(newRoles, instance.Roles);
        }

    }

}
