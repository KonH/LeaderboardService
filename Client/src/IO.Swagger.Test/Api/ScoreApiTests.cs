/* 
 * API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ScoreApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ScoreApiTests
    {
        private ScoreApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ScoreApi(Common.DefaultConfig);
			Common.Prepare();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {
			Common.Cleanup();
        }

        /// <summary>
        /// Test an instance of ScoreApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ScoreApi
            //Assert.IsInstanceOfType(typeof(ScoreApi), instance, "instance is a ScoreApi");
        }

        
        /// <summary>
        /// Test ApiScoreByIdDelete
        /// </summary>
        [Test]
        public void ApiScoreByIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string authorization = null;
            //instance.ApiScoreByIdDelete(id, authorization);
            
        }
        
        /// <summary>
        /// Test ApiScoreByIdGet
        /// </summary>
        [Test]
        public void ApiScoreByIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string authorization = null;
            //instance.ApiScoreByIdGet(id, authorization);
            
        }
        
        /// <summary>
        /// Test ApiScoreByIdPatch
        /// </summary>
        [Test]
        public void ApiScoreByIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string authorization = null;
            //ScoreItem item = null;
            //instance.ApiScoreByIdPatch(id, authorization, item);
            
        }
        
        /// <summary>
        /// Test ApiScoreGet
        /// </summary>
        [Test]
        public void ApiScoreGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //var response = instance.ApiScoreGet(authorization);
            //Assert.IsInstanceOf<List<ScoreItem>> (response, "response is List<ScoreItem>");
        }
        
        /// <summary>
        /// Test ApiScorePost
        /// </summary>
        [Test]
        public void ApiScorePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //ScoreItem item = null;
            //instance.ApiScorePost(authorization, item);
            
        }
        
    }

}
